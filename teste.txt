@doc "Requests a user email change using VS"
  @spec request(conn :: Plug.Conn.t(), params :: map()) :: Plug.Conn.t()
  def request(conn, params) do
    subject_id = subject_id(conn)
    params = Map.merge(params, %{"subject_id" => subject_id, "requested_by" => subject_id})

    with {:ok, _} <- AuthX.authorize_resource(conn, :request_email_change_public, subject_id),
         {:ok, input} <- ChangesetValidation.cast_and_apply(UserEmailChangeRequestInput, params)
         {:ok, request} <- ChangeEmail.request_change_email(input) do
      conn
      |> put_status(:ok)
      |> put_view(ChangeEmailApiView)
      |> render("create.json", %{request: request})
    else
      {:error, %Ecto.Changeset{} = changeset} -> {:error, {:validation, changeset}}
      error -> error
    end
  end


ChangesetValidation.cast_and_apply(UserEmailChangeRequestInput, params)

{:ok,
 %PandaCore.Users.Inputs.Public.UserEmailChangeRequestInput{
   subject_id: "user:af213c15-75a4-41fd-ba69-46f0ac4a67e4",
   requested_by: "user:af213c15-75a4-41fd-ba69-46f0ac4a67e4",
   new_email: "triopedeserra@gmail.com"
 }}


 def execute(%UserEmailChangeRequestInput{subject_id: "user:" <> user_id} = input) do
    Repo.with_transaction(fn ->
      with {:exists?, false} <- {:exists?, request_already_exists?(user_id)},
           {:user, {:ok, %User{} = user}} <- {:user, User.fetch(id: user_id)},
           {:same_email?, false} <- {:same_email?, user.email == input.new_email},
           {:create, {:ok, request}} <- {:create, create_request(input)},
           {:expire_job, {:ok, _}} <- {:expire_job, enqueue_expiration_job(request)},
           {:notify, {:ok, vs_code}} <- {:notify, request_verification_code(request)},
           {:update, {:ok, request}} <- {:update, update_request(request, vs_code)} do
        {:ok, Repo.preload(request, [:user_security_check])}
        ...
end

defp create_request(%{
         subject_id: "user:" <> user_id,
         requested_by: "user:" <> requested_by,
         new_email: new_email
       }) do
    ChangeEmail.create(%{
      user_id: user_id,
      requested_by: requested_by,
      new_email: new_email
    })
  end